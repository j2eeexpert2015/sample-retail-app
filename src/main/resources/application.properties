# Database Configuration (PostgreSQL)

# JDBC connection URL pointing to the same DB name as POSTGRES_DB in Docker
spring.datasource.url=jdbc:postgresql://localhost:5432/retaildb
spring.datasource.username=retail_user
spring.datasource.password=retail_pass
spring.datasource.driver-class-name=org.postgresql.Driver

# Maximum number of database connections allowed by HikariCP
# Should be ? PostgreSQL max_connections (set in Docker)
spring.datasource.hikari.maximum-pool-size=2000

# Optional alternative pool configs (commented)
# spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
# spring.datasource.tomcat.max-active=2000

# JPA and Hibernate Configuration
# Do not auto-generate schema (DDL) from JPA entities
spring.jpa.generate-ddl=false

# Tells Spring to use PostgreSQL-specific SQL dialects (not the DB name)
spring.jpa.database=POSTGRESQL

# Sets the default logical schema Hibernate operates in, inside retaildb
# This schema ("library") must exist in the retaildb, or Hibernate will fail
spring.jpa.properties.hibernate.default_schema=retail

# Disable SQL logging in the console
spring.jpa.show-sql=true

# Do not auto-create/update schema (DDL)
spring.jpa.hibernate.ddl-auto=none

# Server Configuration
# Port on which the Spring Boot app will run
server.port=8080

# Base URL to simulate external delay
#base.url=https://httpbin.org
#base.url=https://reqres.in
base.url=https://postman-echo.com



# Thread Configuration
# Enable virtual threads (Java 21+) for high concurrency
spring.threads.virtual.enabled=true